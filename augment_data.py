import random
import sys

import numpy as np

import data_handling as dh
import deep_models as dm

#random.seed(1)

if __name__ == "__main__":
    print("Starting main.")

    # ------------------------------------------------------------------------
    # Load data        
    # ------------------------------------------------------------------------

    train_images, truth_images = dh.read_data(data_dir="training/images/")
    iw, ih, ic = train_images[0].shape

    if len(train_images) != len(truth_images):
        sys.exit("ERROR: Dimension mismatch.")
    n_images = len(train_images)

    print("Data loaded.")
    print("Number of train images:" + str(len(train_images)))
    print("Number of truth images:" + str(len(truth_images)))
    print("Train image size: " + str(train_images[0].shape))
    print("Truth image size: " + str(truth_images[0].shape))

    # ------------------------------------------------------------------------
    # Augment data        
    # ------------------------------------------------------------------------

    # Augumentation for 250 x 250 images (relevant for translation).
    ap=[[0.0, 0.95,-10,-10],
        [0.0, 0.95,-10, 10],
        [0.0, 0.95, 10,-10],
        [0.0, 0.95, 10, 10],
        #
        [0.0, 0.9,-20,-20],
        [0.0, 0.9,-20, 20],
        [0.0, 0.9, 20,-20],
        [0.0, 0.9, 20, 20],
        #
        [0.0, 0.85,-30,-30],
        [0.0, 0.85,-30, 30],
        [0.0, 0.85, 30,-30],
        [0.0, 0.85, 30, 30],
        #
        [-77.0, 1.06, 0, 0],
        [-70.0, 1.06, 0, 0],
        [-63.0, 1.06, 0, 0],
        [-56.0, 1.06, 0, 0],
        [-49.0, 1.06, 0, 0],
        [-42.0, 1.06, 0, 0],
        [-35.0, 1.06, 0, 0],
        [-28.0, 1.06, 0, 0],
        [-21.0, 1.06, 0, 0],
        [-14.0, 1.06, 0, 0],
        [-7.0, 1.06, 0, 0],
        [-3.5, 1.06, 0, 0],
        [0.0, 1.06, 0, 0],
        [3.5, 1.06, 0, 0],
        [7.0, 1.06, 0, 0],
        [14.0, 1.06, 0, 0],
        [21.0, 1.06, 0, 0],
        [28.0, 1.06, 0, 0],
        [35.0, 1.06, 0, 0],
        [42.0, 1.06, 0, 0],
        [49.0, 1.06, 0, 0],
        [56.0, 1.06, 0, 0],
        [63.0, 1.06, 0, 0],
        [70.0, 1.06, 0, 0],
        [77.0, 1.06, 0, 0],
        #
        [-35.0, 1.0, 0, 0],
        [-28.0, 1.0, 0, 0],
        [-21.0, 1.0, 0, 0],
        [-14.0, 1.0, 0, 0],
        [-7.0, 1.0, 0, 0],
        [-3.5, 1.0, 0, 0],
        [0.0, 1.0, 0, 0],
        [3.5, 1.0, 0, 0],
        [7.0, 1.0, 0, 0],
        [14.0, 1.0, 0, 0],
        [21.0, 1.0, 0, 0],
        [28.0, 1.0, 0, 0],
        [35.0, 1.0, 0, 0],
        #
        [-7.0, 0.95, 0, 0],
        [-3.5, 0.95, 0, 0],
        [0.0, 0.95, 0, 0],
        [1.5, 0.95, 0, 0],
        [3.0, 0.95, 0, 0],
        #
        [-7.0, 0.9, 0, 0],
        [-3.5, 0.9, 0, 0],
        [0.0, 0.9, 0, 0],
        [3.5, 0.9, 0, 0],
        [7.0, 0.9, 0, 0],
        #
        [-9.0, 0.85, 0, 0],
        [-6.0, 0.85, 0, 0],
        [-3.0, 0.85, 0, 0],
        [0.0, 0.85, 0, 0],
        [3.0, 0.85, 0, 0],
        [6.0, 0.85, 0, 0],
        [9.0, 0.85, 0, 0],
        #
        [76.0, 1.0, 0, 0],
        [83.0, 1.0, 0, 0],
        [86.5, 1.0, 0, 0],
        [90.0, 1.0, 0, 0],
        [93.5, 1.0, 0, 0],
        [97.0, 1.0, 0, 0],
        [104.0, 1.0, 0, 0],
        #
        [87.0, 0.95, 0, 0],
        [88.5, 0.95, 0, 0],
        [90.0, 0.95, 0, 0],
        [91.5, 0.95, 0, 0],
        [93.0, 0.95, 0, 0], 
        #
        [83.0, 0.9, 0, 0],
        [86.5, 0.9, 0, 0],
        [90.0, 0.9, 0, 0],
        [93.5, 0.9, 0, 0],
        [97.0, 0.9, 0, 0],
        #
        [81.0, 0.85, 0, 0],
        [84.0, 0.85, 0, 0],
        [87.0, 0.85, 0, 0],
        [90.0, 0.85, 0, 0],
        [93.0, 0.85, 0, 0],
        [96.0, 0.85, 0, 0],
        [99.0, 0.85, 0, 0],
        #
        [166.0, 1.0, 0, 0],
        [173.0, 1.0, 0, 0],
        [176.5, 1.0, 0, 0],
        [180.0, 1.0, 0, 0],
        [183.5, 1.0, 0, 0],
        [187.0, 1.0, 0, 0],
        [194.0, 1.0, 0, 0],
        #
        [177.0, 0.95, 0, 0],
        [178.5, 0.95, 0, 0],
        [180.0, 0.95, 0, 0],
        [181.5, 0.95, 0, 0],
        [183.0, 0.95, 0, 0],
        #
        [173.0, 0.9, 0, 0],
        [176.5, 0.9, 0, 0],
        [180.0, 0.9, 0, 0],
        [183.5, 0.9, 0, 0],
        [187.0, 0.9, 0, 0],
        #
        [171.0, 0.85, 0, 0],
        [174.0, 0.85, 0, 0],
        [177.0, 0.85, 0, 0],
        [180.0, 0.85, 0, 0],
        [183.0, 0.85, 0, 0],
        [186.0, 0.85, 0, 0],
        [189.0, 0.85, 0, 0],
        #
        [256.0, 1.0, 0, 0],
        [263.0, 1.0, 0, 0],
        [266.5, 1.0, 0, 0],
        [270.0, 1.0, 0, 0],
        [273.5, 1.0, 0, 0],
        [277.0, 1.0, 0, 0],
        [284.0, 1.0, 0, 0],
        #
        [267.0, 0.95, 0, 0],
        [268.5, 0.95, 0, 0],
        [270.0, 0.95, 0, 0],
        [271.5, 0.95, 0, 0],
        [273.0, 0.95, 0, 0],
        #
        [263.0, 0.9, 0, 0],
        [266.5, 0.9, 0, 0],
        [270.0, 0.9, 0, 0],
        [273.5, 0.9, 0, 0],
        [277.0, 0.9, 0, 0],
        #
        [261.0, 0.85, 0, 0],
        [264.0, 0.85, 0, 0],
        [267.0, 0.85, 0, 0],
        [270.0, 0.85, 0, 0],
        [273.0, 0.85, 0, 0],
        [276.0, 0.85, 0, 0],
        [279.0, 0.85, 0, 0]]

    #ap = [[3.0, 1.0, 10, 10]]


    print("Number of augumentations: " + str(len(ap)))
    dh.augment_data(train_images, 
                    truth_images,
                    nw_image=224,
                    nh_image=224,
                    nw_label=224,
                    nh_label=224,
                    augmented_images_dir="augmented_images/",
                    ap=ap,
                    save_images=False)





